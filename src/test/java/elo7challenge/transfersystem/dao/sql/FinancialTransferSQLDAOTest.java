package elo7challenge.transfersystem.dao.sql;

import static org.junit.Assert.assertEquals;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

import elo7challenge.transfersystem.dao.FinancialTransferDAO;
import elo7challenge.transfersystem.domain.FinancialTransfer;

public class FinancialTransferSQLDAOTest {

	private FinancialTransferDAO dao;
	
	@Before
	public void setUp() throws SQLException {
		// database setup
		// XXX test class shouldn't know so much database setup code, this should be refactored
		Connection connection = DriverManager.getConnection("jdbc:hsqldb:mem:db/temptesting", "SA", "");;
		PreparedStatement prepareStatement = connection.prepareStatement("CREATE TABLE financial_transfer ("
				+ "id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1), "
				+ ")");
		prepareStatement.execute();
		
		this.dao = new FinancialTransferSQLDAO(connection);
	}
	
	@Test
	public void shouldReturnListWithOneTransfer() throws SQLException {		
		FinancialTransfer financialTransfer = new FinancialTransfer();

		dao.save(financialTransfer);
		List<FinancialTransfer> list = dao.list();
		
		assertEquals(1, list.size());
		assertEquals(new Long(1L), list.get(0).getId());
	}

}
